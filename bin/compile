#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

indent() {
    echo "     $*" || true
}

VENDOR_DIR=$BUILD_DIR/vendor
ORACLE_DIR=$VENDOR_DIR/oracle
INSTANTCLIENT_DIR=$ORACLE_DIR/instantclient_12_2
PROFILE_D_DIR=$BUILD_DIR/.profile.d
DRIVERS_DIR=$BUILD_DIR/drivers

BASIC_FILENAME=`cat $BUILD_DIR/oracle.json | jq ".basic.path"`
SDK_FILENAME=`cat $BUILD_DIR/oracle.json | jq ".sdk.path"`
TNS_PATH=`cat $BUILD_DIR/oracle.json | jq ".tns_path"`

BASIC_FILENAME="${BASIC_FILENAME//\"}"
SDK_FILENAME="${SDK_FILENAME//\"}"
TNS_PATH="${TNS_PATH//\"}"

mkdir -p $ORACLE_DIR
indent "Extracting $BASIC_FILENAME..."
unzip -qq $BUILD_DIR/$BASIC_FILENAME -d $ORACLE_DIR
indent "Extracting $SDK_FILENAME..."
unzip -qq $BUILD_DIR/$SDK_FILENAME -d $ORACLE_DIR

indent "Clearing drivers archives"
rm -r $DRIVERS_DIR

export OCI_LIB_DIR=$INSTANTCLIENT_DIR
export OCI_INC_DIR=$INSTANTCLIENT_DIR/sdk/include

indent "Symlinking libclntsh.so..."
THIS_DIR=`pwd`
cd $INSTANTCLIENT_DIR
ln -s libclntsh.so.12.1 libclntsh.so
cd $THIS_DIR

indent "Installing node-oracledb"
THIS_DIR=`pwd`
cd $BUILD_DIR
npm install oracledb --save
cd $THIS_DIR

indent "Saving environment setup script..."
mkdir -p $PROFILE_D_DIR
cat << EOF > $PROFILE_D_DIR/oracle.sh
#!/usr/bin/env bash
export LD_LIBRARY_PATH="$HOME/vendor/oracle/instantclient_12_2:$HOME/.apt/lib/x86_64-linux-gnu:\$LD_LIBRARY_PATH"
export TNS_ADMIN="$HOME/$TNS_PATH"
EOF

indent "Done."